package git.ReizisTim.upr3;
//Создайте базовый класс с определением метода abstract print(), переопределя-
//емого производными классами. Переопределенная версия метода выводит значение
//переменной int, определенной в производном классе. В точке определения этой
//переменной присвойтеей ненулевое значение. Вызовите этот метод в конструкторе
//базового класса. В методе main() создайте объект производного типа, а затем вы-
//зовите его метод print(). Объясните результат работы программы.
// Метод print включен в конструктор базового класса, поэтому при построении объекта производного класса его
// переопределенная версия запускается конструктором
public class upr3 {
    public static void main(String[] args){
        prCl1 obj = new prCl1();
    }
}
abstract class printClass{
    printClass(){
        print();
    }
abstract void print();
}
class prCl1 extends printClass{
    int input = 1;
    void print(){
        System.out.println("prCl "+ input);
    }
}
